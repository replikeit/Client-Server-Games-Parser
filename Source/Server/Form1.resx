<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANsrAADbKwAAAAAAAAAA
        AAAAAAAAAAAAAgAAABcAAAA5AAAAUwAAAF4AAABZAAAARAAAACQAAAAHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACgAAACIAAAAzwAAAO4AAAD5AAAA/AAAAPsAAADzAAAA3gAAAKkAAABHAAAAAgAA
        AAkAAAAeAAAAHgAAAB8AAAASAAAAFAAAACAAAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAA
        AB8AAAAfAAAAHwAAAB8AAAAfAAAA0wAAAP8AAAD+AAAA8gAAAOMAAADcAAAA3wAAAOwAAAD7AAAA/wAA
        AOsAAAA8AAAANAAAANcAAADhAAAA5AAAAIcAAACPAAAA5QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAA
        AOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADyAAAArAAAAGAAAAA7AAAALwAAAC0AAAAuAAAANAAA
        AE4AAACLAAAA4AAAAGAAAAAwAAAA8AAAAP8AAAD/AAAAmQAAAKIAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFwAAAA/AAAAeQAAAKoAAADEAAAAzQAA
        AMkAAAC2AAAAjgAAAFEAAABEAAAANAAAADIAAADwAAAA/wAAAP8AAACZAAAAogAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAjgAAAOwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA+gAAALUAAAAeAAAAMwAAAPAAAAD/AAAA/wAAAJkAAACiAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA7QAA
        ALgAAACJAAAAbQAAAGMAAABnAAAAfQAAAKUAAADbAAAA/AAAAFoAAAAwAAAA8AAAAP8AAAD/AAAAmQAA
        AKIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AKIAAABAAAAANQAAAFIAAABrAAAAdgAAAHEAAABcAAAAPgAAADIAAAB7AAAAUQAAADEAAADwAAAA/wAA
        AP8AAACZAAAAogAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAUAAAAKoAAADpAAAA/AAAAP8AAAD/AAAA/wAAAP4AAADzAAAAyQAAAGsAAAAVAAAAMwAA
        APAAAAD/AAAA/wAAAJkAAACiAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADkAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA9QAA
        AEcAAAAxAAAA8AAAAP8AAAD/AAAAmQAAAKIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADvAAAAuwAAAIsAAABtAAAAYgAAAGcAAAB9AAAApwAA
        AN4AAAD+AAAAYAAAADAAAADwAAAA/wAAAP8AAACZAAAAogAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAygAAAEAAAAAJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAIAAAAJkAAABfAAAAMAAAAPAAAAD/AAAA/wAAAJkAAACiAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA/wAAAP8AAACVAAAALwAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAVAAAAdQAAADwAAABAAAAA9gAAAP8AAAD/AAAAmQAAAKIAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA1AAAAF8AAADGAAAA/wAAACwAAAByAAAAeAAA
        AGEAAABOAAAARwAAAEoAAABZAAAAcAAAAHwAAABFAAAADQAAAJoAAAD/AAAA/wAAAP8AAACZAAAAogAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAC8AAAAHwAAAKcAAAD/AAAAAAAA
        AAQAAAAbAAAAOQAAAEsAAABPAAAASwAAADwAAAAjAAAADQAAACoAAACbAAAA+AAAAP8AAAD/AAAA/wAA
        AJkAAACiAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAADkAAAA+QAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAACwAAADUAAAA9AAAATwAAAHMAAACqAAAA5QAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAmQAAAKIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAPIAAADmAAAA1gAA
        AMMAAAC7AAAA7QAAAAAAAAAAAAAAAAAAAAAAAAAuAAAA5AAAAPcAAAD8AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACZAAAAmwAAAPEAAADeAAAAzAAAALYAAACdAAAAgwAAAGkAAABQAAAAOQAA
        ACUAAAAVAAAACAAAAAUAAACDAAAAAAAAAAAAAAAAAAAAAAAAADAAAADuAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAJkAAAAnAAAAMAAAAB0AAAAOAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAABAAAAAeAAAANwAAAK0AAAAAAAAAAAAAAAAAAAAAAAAAMAAAAO4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAmQAAAAAAAAABAAAACAAAABUAAAAmAAAAOgAA
        AFEAAABpAAAAfwAAAJEAAACbAAAAnQAAAJUAAACcAAAA5wAAAAAAAAAAAAAAAAAAAAAAAAAwAAAA7gAA
        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
        AAL4AABg/gAMAP+AAAD/4AAB//gAP//+B/8=
</value>
  </data>
</root>